<?php

namespace App;

use Illuminate\Database\Eloquent\Model;
use Illuminate\Database\Eloquent\SoftDeletes;
use Ramsey\Uuid\Uuid;

class properties extends Model
{
    //

    protected static function boot()
    {
        parent::boot(); // TODO: Change the autogenerated stub

        static::creating(function ($model){
            try{
                $model->id = Uuid::uuid4()->toString();
            }catch (UnsatisfiedDependencyException $e){
                abort(500, $e->getMessage());
            }
        });
    }
    use SoftDeletes;


    protected $keyType = 'string';
    public $incrementing = false;

    public function propertiable(){
        return $this->morphTo();
    }



    public function getFacilitiesAttribute(){
        $property_id = $this->attributes['id'];
        $data = RoomFacilitiesDetail::where('property_id', $property_id)->get();
        return $data;
    }

    public function getPublicFacilitiesAttribute(){
        $property_id = $this->attributes['id'];
        $data = PublicFacilitiesDetail::where('property_id', $property_id)->get();
        return $data;
    }

    public function getPriceAttribute(){
        $property_id = $this->attributes['id'];
        $data = priceDetail::where('property_id', $property_id)->get();
        return $data;
    }

    public function getOwnerIdAttribute(){
        $owner_id = $this->attributes['owner_id'];
        $data = User::where('id', $owner_id)->get()[0];
        return $data;
    }

//    public function getPropertiableIdAttribute(){
//        $id = $this->attributes['propertiable_id'];
//        $type = $this->attributes['propertiable_type'];
//        $data = $type == 'App\apartments'?apartments::where('id', $id)->get():houses::where('id', $id)->get();
//        return $data[0];
//    }

    public function RoomFacilities(){
        return $this->hasMany(RoomFacilitiesDetail::class, 'property_id', 'id');
    }

    public function PublicFacilities(){
        return $this->hasMany(PublicFacilitiesDetail::class, 'property_id', 'id');
    }

    public function priceDetail(){
        return $this->hasOne(PublicFacilitiesDetail::class, 'property_id', 'id');
    }
}
